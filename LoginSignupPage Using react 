import React, { useState } from "react";

const LoginSignupPage = () => {
  const [isLogin, setIsLogin] = useState(true); // Toggle between Login and Signup
  const [role, setRole] = useState(""); // Role selection for Signup (Recruiter or Client)

  // Sample user data (for demo purposes)
  const users = [
    { username: "clientUser", password: "clientPass", role: "client" },
    { username: "recruiterUser", password: "recruiterPass", role: "recruiter" },
  ];

  // Handle Login Form Submission
  const handleLogin = (e) => {
    e.preventDefault();
    const username = e.target.username.value.trim();
    const password = e.target.password.value.trim();

    const user = users.find(
      (u) => u.username === username && u.password === password
    );

    if (user) {
      alert(`Welcome to the ${user.role === "client" ? "Client" : "Recruiter"} Server!`);
      // Redirect based on role (for demonstration, just an alert)
    } else {
      alert("Invalid username or password!");
    }
  };

  // Handle Signup Form Submission
  const handleSignup = (e) => {
    e.preventDefault();
    const email = e.target.email.value.trim();
    const password = e.target.password.value.trim();

    if (role === "recruiter") {
      const companyName = e.target.companyName.value.trim();
      const position = e.target.position.value.trim();
      if (!companyName || !position) {
        alert("Please fill in all recruiter fields.");
        return;
      }
      alert("Recruiter Sign-up successful! You can now log in.");
    } else if (role === "client") {
      const fullName = e.target.fullName.value.trim();
      const organization = e.target.organization.value.trim();
      if (!fullName || !organization) {
        alert("Please fill in all client fields.");
        return;
      }
      alert("Client Sign-up successful! You can now log in.");
    } else {
      alert("Please select a role before signing up.");
    }

    // Reset the form and switch to login
    setIsLogin(true);
  };

  return (
    <div className="bg-gradient-to-r from-pink-400 via-purple-500 to-indigo-600 min-h-screen flex items-center justify-center">
      <div
        className="p-8 rounded-lg max-w-md w-full"
        style={{
          background: "linear-gradient(135deg, rgba(255,255,255,0.3), rgba(255,255,255,0.1))",
          backdropFilter: "blur(20px)",
          WebkitBackdropFilter: "blur(20px)",
          boxShadow: "0 4px 30px rgba(0, 0, 0, 0.2)",
          border: "1px solid rgba(255, 255, 255, 0.3)",
        }}
      >
        {isLogin ? (
          // Login Section
          <>
            <h1 className="text-2xl font-bold text-white text-center mb-6">Login</h1>
            <form onSubmit={handleLogin} className="space-y-4">
              <input
                type="text"
                name="username"
                placeholder="Username"
                required
                className="w-full p-3 rounded-md bg-white/30 text-white placeholder:text-white/70"
              />
              <input
                type="password"
                name="password"
                placeholder="Password"
                required
                className="w-full p-3 rounded-md bg-white/30 text-white placeholder:text-white/70"
              />
              <div className="flex justify-between items-center text-sm text-white">
                <label className="flex items-center space-x-2">
                  <input
                    type="checkbox"
                    className="w-4 h-4 rounded bg-white/30 text-purple-500 focus:ring-2 focus:ring-purple-500"
                  />
                  <span>Remember me</span>
                </label>
                <a href="#" className="hover:underline">
                  Forgot password?
                </a>
              </div>
              <button
                type="submit"
                className="w-full bg-green-500 hover:bg-green-600 text-white rounded-md py-2 px-4"
              >
                Login
              </button>
              <p className="text-center text-white mt-4">
                Don't have an account?{" "}
                <button
                  type="button"
                  onClick={() => setIsLogin(false)}
                  className="text-blue-200 hover:underline"
                >
                  Register
                </button>
              </p>
            </form>
          </>
        ) : (
          // Signup Section
          <>
            <h1 className="text-2xl font-bold text-white text-center mb-6">Sign Up</h1>
            <div className="flex justify-between mb-6">
              <button
                type="button"
                onClick={() => setRole("recruiter")}
                className={`${
                  role === "recruiter" ? "bg-red-600" : "bg-red-500"
                } hover:bg-red-600 text-white rounded-md py-2 px-4 w-[48%] text-center`}
              >
                Recruiter Sign Up
              </button>
              <button
                type="button"
                onClick={() => setRole("client")}
                className={`${
                  role === "client" ? "bg-blue-600" : "bg-blue-500"
                } hover:bg-blue-600 text-white rounded-md py-2 px-4 w-[48%] text-center`}
              >
                Client Sign Up
              </button>
            </div>
            <form onSubmit={handleSignup} className="space-y-4">
              {role === "recruiter" && (
                <>
                  <input
                    type="text"
                    name="companyName"
                    placeholder="Company Name"
                    required
                    className="w-full p-3 rounded-md bg-white/30 text-white placeholder:text-white/70"
                  />
                  <input
                    type="text"
                    name="position"
                    placeholder="Position"
                    required
                    className="w-full p-3 rounded-md bg-white/30 text-white placeholder:text-white/70"
                  />
                </>
              )}
              {role === "client" && (
                <>
                  <input
                    type="text"
                    name="fullName"
                    placeholder="Full Name"
                    required
                    className="w-full p-3 rounded-md bg-white/30 text-white placeholder:text-white/70"
                  />
                  <input
                    type="text"
                    name="organization"
                    placeholder="Company/Organization"
                    required
                    className="w-full p-3 rounded-md bg-white/30 text-white placeholder:text-white/70"
                  />
                </>
              )}
              <input
                type="email"
                name="email"
                placeholder="Email"
                required
                className="w-full p-3 rounded-md bg-white/30 text-white placeholder:text-white/70"
              />
              <input
                type="password"
                name="password"
                placeholder="Password"
                required
                className="w-full p-3 rounded-md bg-white/30 text-white placeholder:text-white/70"
              />
              <button
                type="submit"
                className="w-full bg-green-500 hover:bg-green-600 text-white rounded-md py-2 px-4 mt-4"
              >
                Sign Up
              </button>
              <p className="text-center text-white mt-4">
                Already have an account?{" "}
                <button
                  type="button"
                  onClick={() => setIsLogin(true)}
                  className="text-blue-200 hover:underline"
                >
                  Login
                </button>
              </p>
            </form>
          </>
        )}
      </div>
    </div>
  );
};

export default LoginSignupPage;